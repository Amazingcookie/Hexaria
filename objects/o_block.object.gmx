<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_white</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = s_white
color_index = 0 //Will be changed next alarm
amount = 0 //Which # is this tile in the pattern?

active = false //Is this tile in the currently selected pattern?
selected = false //Is the mouse currently on the tile?
moved = false //Has this tile moved this step? (If the tile has moved it can't be selected)

y -= 4 //Looks graphically a bit better!

alarm[11] = 1

locked = false //If a gem is locked, it has to be included twice to disappear
bonus = false //If a BONUS gem is matched, the player gains 100 bonus points
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.particles == true
effect_create_above(ef_firework,x+(sprite_width/2)-13,y+(sprite_height/2),1,colori(color_index))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>color_index = irandom_range(0,o_control.colors-1)

if ascentabled() &amp;&amp; irandom_range(0,20) == 20
locked = true
else
locked = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if bonus == true
{
score += 250
b = instance_create(x+20,y,o_txtnogameplay);
(b).txt = 250;
(b).alarm[11] = 1;
if global.sfx == true
{audio_play_sound(sou_bonus,0,false)}
if global.particles == true
 {effect_create_above(ef_firework,x+(sprite_width/2)-13,y+(sprite_height/2),1,c_orange)}
}

if locked == true
{
 if global.particles == true
 {effect_create_above(ef_firework,x+(sprite_width/2)-13,y+(sprite_height/2),1,c_black)}
 locked = false; exit
}
else
{
 instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//If a block floats lonely in the sky, destroy it (ascent mode)
if ascentabled() &amp;&amp; o_control.moved == 0 &amp;&amp; alarm[0] == -1 &amp;&amp; position_empty(x+19,y+62+27) &amp;&amp; position_empty(x+19-26,y+62+27) &amp;&amp; position_empty(x+19+26,y+62+27)
{alarm[0] = 10}

//if position_empty(x+19-42,y+27) &amp;&amp; position_empty(x+19+42,y+27)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if o_pause.paused == false
for(i=6;i!=0;i-=1)
 {if position_empty(x+19,y+62+27+i) == true
  {y+=i; moved = true; o_control.moved += 1; exit}
 }
moved = false

if active == false
 {amount = 0}
 
if y &lt;= (-sprite_height/2) &amp;&amp; (ascentabled() || decenabled()) &amp;&amp; moved == false &amp;&amp; !instance_exists(o_highscore) &amp;&amp; !o_pause.paused
{gameover()}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//This was in a Begin Step event initially- shouldn't make a difference, just saying

//If the game is paused, simply increase the alarm every step
if o_pause.paused == true &amp;&amp; alarm[0] &gt;= 1
{alarm[0] += 1}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>selected = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="1">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>selectgem</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="0">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>selectgem</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if o_pause.paused == false
{
   
 if active = true
 {
  //Draw hexagon, color indicator if enabled, and the amount number.
  draw_sprite_ext(sprite_index,0,x,y,1,1,0,colori(color_index),1)
  if locked == true {draw_sprite(s_lock,global.coloricon,x,y)}
  if global.coloricon == 1  {draw_sprite_ext(s_colorblind,color_index,x+3,y+15,1,1,0,c_white,0.75)}
  draw_set_halign(fa_center); draw_set_font(f_small)
  var outlinecolor = c_black;
  if o_control.valid &gt;= 0 {draw_set_color(c_black); outlinecolor = c_lime}
  txtoutline(x+sprite_width/2,y+sprite_height/2,string(amount),outlinecolor)
  draw_text(x+sprite_width/2,y+sprite_height/2,string(amount))
  draw_set_color(c_white)
 }
 else
 {
  draw_sprite_ext(sprite_index,0,x,y,1,1,0,colori(color_index),0.75)
  if locked == true {draw_sprite(s_lock,global.coloricon,x,y)}
  if global.coloricon == 1  {draw_sprite_ext(s_colorblind,color_index,x+3,y+15,1,1,0,c_white,0.75)}
 }
 
 if bonus == true {draw_sprite(s_bonuspoints,0,x,y)} 
}
else
draw_sprite_ext(s_pause,8,x,y,1,1,0,c_white,0.075)

//If the location of some function seems odd to you, it most likely has to do with the draw order
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>12,0</point>
    <point>31,31</point>
  </PhysicsShapePoints>
</object>
