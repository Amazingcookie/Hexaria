<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>flashy</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>" "</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>phase</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alph</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>leaderboards</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>text[30]</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>request[0] = -1; request[1] = -1; request[2] = -1
request[3] = -1; request[4] = -1; request[5] = -1

totalplay = "?"; totalscore = "?"
totalmatches = "?"; totalgems = "?"

for (i=1;i&lt;=25;i+=1)
{
displayname[i] = ""
score_sort[i] = ""
stored[i] = ""
img_index[i] = 5

userreq[i] = -1
}

if gj_user_isloggedin() == true
{
var visscore;
visscore = preparesendscore()
request[0] = gj_scores_add(global.leaderboardid, visscore, score,string(o_control.matches)+"_"+string(o_control.gemsmatched))

/* GJ Trophies */  gj_trophy_add(global.trophybase)
if score &gt;= 5000  {gj_trophy_add(string(real(global.trophybase)+1))}
if score &gt;= 10000 {gj_trophy_add(string(real(global.trophybase)+2))}
}

restore() //Makes sure no more moves can be made after the game ends

instance_create(130,20,o_restart); instance_create(750,20,o_tweetscore);
if !gj_privateset() {phase = 2}

if global.sfx
{audio_play_sound(sou_gameover,0,false)}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>30</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>background_alpha[1] += 0.05

if background_alpha[1] == 1
{stopmusic()
audio_sound_gain(mus_menu, 1, 1000); audio_sound_gain(mus_zen, 1, 1000); audio_sound_gain(mus_credits,1,1000)
score=0; room_goto(rm_main)}

alarm[11] = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if flashy == " "
flashy = "|"
else
flashy = " "

alarm[0] = 30
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if phase &gt;= 1 &amp;&amp; background_alpha[1] == 0 &amp;&amp; (mouse_y &gt;= 85 || (mouse_x &gt;= 200 &amp;&amp; mouse_x &lt;= 700)) //To make sure that it won't interfere with the twitter/retry button
{background_alpha[1] = 0.05; alarm[11] = 1;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var resultid = gj_result_id()
if(resultid==request[0])
{
{
 if gj_result_status()
 {request[1] = gj_scores_get(global.leaderboardid, 25) leaderboards = text[31];}
 else
 {leaderboards = text[32] +"#"+ gj_result_error()}
}
}
if(resultid==request[1]) //If we just recieved the highscore. 
{
    if(gj_result_status())
    {
        for(i=0;i&lt;gj_result_data_count();i+=1)
        {
         score_sort[i+1]=gj_result_data_field_num("score",i)
         displayname[i+1] = gj_result_data_field_num("display_name",i)
         if string_width(displayname[i+1]) &gt;= 290 //string_length(displayname[i+1]) &gt; 23
         {displayname[i+1] = string_copy(displayname[i+1],0,17)+"..."}
         stored[i+1] = gj_result_data_field_num("stored",i)
         if gj_result_data_field_num("is_guest",i) == true
         {img_index[i+1] = 5} 
         else 
         {img_index[i+1] = 0; userreq[i+1] = gj_user_info_fromusername(string(displayname[i+1]))}
        }
    leaderboards = ""
    }
    else
    leaderboards=text[34]
}
if(resultid==request[2]) //If we just recieved the total plays. 
{   if(gj_result_status())
    {totalplay = gj_result_data_field("data")}
    else
    totalplay="???"
}

if(resultid==request[3]) //If we just recieved the total score. 
{   if(gj_result_status())
    {totalscore = gj_result_data_field("data")}
    else
    totalscore="???"
}

if(resultid==request[4]) //If we just recieved the total amount of matches
{   if(gj_result_status())
    {totalmatches = gj_result_data_field("data")}
    else
    totalmatches="???"
}

if(resultid==request[5]) //If we just recieved the total amount of gems.
{   if(gj_result_status())
    {totalgems = gj_result_data_field("data")}
    else
    totalgems="???"
}

for(i=1;i&lt;=25;i+=1)
{
 if(resultid==userreq[i])
 {if(gj_result_status())
  {
   switch string(gj_result_data_field("type"))
   {case "0": img_index[i] = 0; break;
    case "User": img_index[i] = 1; break;
    case "Developer": img_index[i] = 2; break;
    case "Moderator": img_index[i] = 3; break;
    case "Administrator": img_index[i] = 4; break;
   }
   if gj_result_data_field("id") == "73237" {img_index[i] = 6}
  }
 else {img_index[i] = 0}
 }
}

gj_result_clear()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>-1</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>phase</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>2</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>keyboard_string = (string_copy(string_lettersdigits(keyboard_string),0,50)) //Both lettersdigits and 50 chars max

if alph &lt; 1 {alph += 0.01}
draw_set_alpha(alph)

if phase = 0
{
draw_set_halign(fa_center); draw_set_font(f_droidmono20); draw_set_valign(fa_middle);
draw_text_ext(room_width/2,room_height/2,text[26]+'#'+text[27]+'#'+text[28]+'##'+keyboard_string+flashy+"##"+text[29],30,room_width)
draw_set_font(f_small); draw_set_valign(fa_top);
}
if phase = 1
{
//draw_highscore(200,100,600,500)
draw_set_halign(fa_center)
draw_text(room_width/2,100,leaderboards)

draw_text(215,90-18,"\#")
draw_text(419-35,90-18,text[42])
draw_text(559,90-18,text[43])
draw_text(656,90-18,text[44])
draw_line(200,89,room_width-200,89)

for (i=1;i&lt;=25;i+=1)
{
draw_sprite(s_leaderboardhex,img_index[i],419-50-ceil(string_width(displayname[i])/2),73+(i*18))
draw_text(215,72+(i*18),string(i))
draw_text(419-35,72+(i*18),displayname[i])
draw_text(559,72+(i*18),score_sort[i])
draw_text(656,72+(i*18),stored[i])
draw_set_alpha(0.4*alph); 
draw_line(200,71+(i*18),room_width-200,71+(i*18));
if img_index[i] != 5 //This value is five when this player is a guest
{if displayname[i] == gj_user_username() &amp;&amp; (string_count("just now",stored[i]) || string_count("seconds",stored[i]))
{draw_rectangle(0,71+(i*18),room_width,89+(i*18),false)}}
else
{if displayname[i] == global.guestname &amp;&amp; (string_count("just now",stored[i]) || string_count("seconds",stored[i]))
{draw_rectangle(0,71+(i*18),room_width,89+(i*18),false)}}
draw_set_alpha(alph)
}

draw_text(room_width/2,10,text[35]+"#"+text[33])
draw_text(room_width/2,542,text[56]+"#"+totalplay+" "+text[57]+" - "+totalscore+" "+text[58]+"#"+totalmatches+" "+text[59]+" - "+totalgems+" "+text[60])
}

draw_set_alpha(1)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>421</id>
        <kind>3</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//If GameJolt is initialised with an empty private key, just show a generic screen.
if alph &lt; 1 {alph += 0.01}
draw_set_alpha(alph)

draw_set_halign(fa_center); draw_set_valign(fa_middle); draw_set_alpha(alph);
draw_text(room_width/2,room_height/2,text[26]+"#"+string(score)+" "+text[58]+"#"+string(o_control.matches)+" "+text[59]+"#"+string(o_control.gemsmatched)+" "+text[60]+"##"+text[35])
draw_set_halign(fa_left); draw_set_valign(fa_top); draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if background_alpha[1] == 0 //To make sure that it won't interfere with the twitter/retry button
{background_alpha[1] = 0.05; alarm[11] = 1;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if phase == 0
{
if keyboard_string == ""
{keyboard_string = "Guest"+string(irandom_range(100000,999999))}
global.guestname = keyboard_string
var visscore;
visscore = preparesendscore()
request[0] = gj_scores_add_guest(global.leaderboardid, visscore, score,string(o_control.matches)+"_"+string(o_control.gemsmatched),keyboard_string)
}
else
if background_alpha[1] == 0
{{background_alpha[1] = 0.05; alarm[11] = 1;}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
